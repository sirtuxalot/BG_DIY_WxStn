/**************************************************************************
weather station kit - wifi version

This is intended to demonstrate all 4 sensors and the microcontroller included in the 
Banggood "AOQDQDQD ESP8266 Weather Station Kit with Temperature Humidity Atmosphetic Pressure Light Sensor 0.96 Display for Arduino IDE IoT Starter" 

Uses libraries from Adafruit, Adi Dax, Sparkfun, Christopher Laws and various individual contributers to the arguino labrary ecosystem

Precariously hacked together from library examples by pileofstuff.ca

Feel free to modify, break, fix, mangle, bend, fold, spindle or mutilate this code as you see fit. 

I give no guarantees or warranties with this code. It might not even work...

 **************************************************************************/
//libraries for display

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

//libraries for DHT11

#include <dht11.h>

//libraries for BMP180

#include <SFE_BMP180.h>
//#include <Wire.h>    // It's already declared

// libraries for  BH1750 (AKA GY-30)

// #include <Wire.h>    // It's already declared
#include <BH1750.h>




// defines for display

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
// The pins for I2C are defined by the Wire-library.

//on nodeMCU: SCL = D1, SDA = D2



#define OLED_RESET LED_BUILTIN  // for NodeMCU

//defines for DHT11


#define DHT11PIN 2

dht11 DHT11;

//define for BMP180

SFE_BMP180 pressure;


// define for BH1750 (AKA GY-30)

BH1750 lightMeter;



//variables for sensors

float temp = 0;
float humid = 0;
float pres = 0;
int light = 0;


#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);


void setup() {

  // for display
  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {

    for (;;); // Don't proceed, loop forever


  }

  display.clearDisplay();
  display.display();

  display.setTextSize(1);      // Normal 1:1 pixel scale
  display.setTextColor(SSD1306_WHITE); // Draw white text
  display.cp437(true);         // Use full 256 char 'Code Page 437' font


  //for BMP180

  pressure.begin();


  //  for BH1750 (AKA GY-30)

  lightMeter.begin();

 

}

void loop() {


  //read sensors

  //DHT11

  int chk = DHT11.read(DHT11PIN);
  temp = ((float)DHT11.temperature);
  humid = DHT11.humidity;

  //BMP180


  double T, P, p0, a;
  pressure.startTemperature();
  pressure.getTemperature(T);
  pressure.startPressure(3);
  pressure.getPressure(P, T);
  pres = P;

  //  BH1750

  float light = lightMeter.readLightLevel();

  

  //temperature

  display.setCursor(0, 0);     // Start at top-left corner
  display.write("Temperature: ");
  display.setCursor(80, 0);
  display.print(temp);
  //display.setCursor(105, 0);
  //display.print("C");

  //humidity

  display.setCursor(0, 8);
  display.write("Humidity: ");
  display.setCursor(80, 8);
  display.print(humid);
  // display.setCursor(105, 0);
  // display.print("%");

  //pressure

  display.setCursor(0, 16);
  display.write("Pressure: ");
  display.setCursor(80, 16);
  display.print(pres);

  //light

  display.setCursor(0, 24);
  display.write("Light");
  display.setCursor(100, 24);
  display.print(light);
  display.display();


  delay(5000); // Pause for 5 seconds


  display.clearDisplay();
  display.display();
  delay(500); // Pause for half a  second

}
